#!/bin/bash

################################################################################
# Author: Jereelton Teixeira
################################################################################

ARG1="$1" #Command ({delete|lock|unlock}:content)
ARG2="$2" #Path Target (site/target)
ARG3="$3" #Content Name (Content-Name-Test)
ARG4="$4" #Database (true|false)
ARG5="$5" #MainDir (test|production|application)

#---------------------------------------------------------------------------------------------

#Checkin commands and parameters

if [[ ! $ARG1 =~ ':' ]]; then
    echo "ERROR: Invalid argument to handler CONTENT: ${ARG1} !"
    exit
fi

if [[ ! $ARG2 =~ '/' ]]; then
    echo "ERROR: Invalid argument to handler CONTENT: [${ARG2}] !"
    exit
fi

if [[ $ARG3 == '' ]]; then
    echo "ERROR: Invalid argument to handler CONTENT: [${ARG3}] !"
    exit
fi

if [[ $ARG4 == '' || ! $ARG1 =~ ':' ]]; then
    echo "ERROR: Invalid argument to handler CONTENT: [${ARG4}] !"
    exit
fi

if [[ $ARG5 == '' ]]; then
    echo "ERROR: Invalid argument to handler CONTENT: [${ARG5}] !"
    exit
fi

MAIN_DIR="$ARG5"
if [[ $ARG5 == '.env' ]]; then
    if [[ ! -e $ARG5 ]]; then
        echo "ERROR: Env File ${MAIN_DIR} not Found !"
        exit
    fi
    ARG5=$(grep 'MAIN_DIR' "${ARG5}" | cut -d "=" -f2 | sed -r 's/"//g' | sed -r "s/'//g" | sed -r 's/ //g')
    MAIN_DIR="'.\$app->getMainDir().'"
fi
#---------------------------------------------------------------------------------------------

#VARIABLES PREPARE

#Content-Name-Test
CMD=$(echo "${ARG1}" | cut -d ":" -f1)
CONTENT_DIR=$(echo "$ARG2" | cut -d "/" -f1)
CONTENT_ORIGINAL="$ARG3"
#-----------------------------------------------------------------------------------------------------

#Checkin file exists
LOCKED=""
MSG_CONTENT="Not found path"
if [[ $CMD == "unlock" ]]; then
    LOCKED=".lock"
    MSG_CONTENT="Content is not Locked"
fi

if [[ ! -e "./resources/${ARG5}/content/${ARG2}/en/${ARG3}.php${LOCKED}" ]]; then
    echo "ERROR: ${MSG_CONTENT} ./resources/${ARG5}/content/${ARG2}/en/${ARG3}.php${LOCKED}"
    exit
fi

if [[ ! -e "./resources/${ARG5}/content/${ARG2}/es/${ARG3}.php${LOCKED}" ]]; then
    echo "ERROR: ${MSG_CONTENT} ./resources/${ARG5}/content/${ARG2}/es/${ARG3}.php${LOCKED}"
    exit
fi

if [[ ! -e "./resources/${ARG5}/content/${ARG2}/pt-br/${ARG3}.php${LOCKED}" ]]; then
    echo "ERROR: ${MSG_CONTENT} ./resources/${ARG5}/content/${ARG2}/pt-br/${ARG3}.php${LOCKED}"
    exit
fi
#---------------------------------------------------------------------------------------------

#Checkin database file exists

if [[ $ARG4 =~ 'db:true' ]]; then

    if [[ ! -e "./resources/${ARG5}/content/database/${CONTENT_DIR}/en/${ARG3}${LOCKED}" ]]; then
        echo "ERROR: Not found database path ./resources/${ARG5}/content/database/${CONTENT_DIR}/en/${ARG3}${LOCKED}"
        exit
    fi

    if [[ ! -e "./resources/${ARG5}/content/database/${CONTENT_DIR}/es/${ARG3}${LOCKED}" ]]; then
        echo "ERROR: Not found database path ./resources/${ARG5}/content/database/${CONTENT_DIR}/es/${ARG3}${LOCKED}"
        exit
    fi

    if [[ ! -e "./resources/${ARG5}/content/database/${CONTENT_DIR}/pt-br/${ARG3}${LOCKED}" ]]; then
        echo "ERROR: Not found database path ./resources/${ARG5}/content/database/${CONTENT_DIR}/pt-br/${ARG3}${LOCKED}"
        exit
    fi

fi
#-----------------------------------------------------------------------------------------------------

#DELETE Command

if [[ $CMD == "delete" ]]; then
    echo "Delete CONTENT ${CONTENT_ORIGINAL} ?"
    read -n1 OP

    rm -rfv "./resources/${ARG5}/content/${ARG2}/en/${ARG3}.php"
    rm -rfv "./resources/${ARG5}/content/${ARG2}/es/${ARG3}.php"
    rm -rfv "./resources/${ARG5}/content/${ARG2}/pt-br/${ARG3}.php"

    if [[ $ARG4 =~ 'db:true' ]]; then
        rm -rfv "./resources/${ARG5}/content/database/${CONTENT_DIR}/en/${ARG3}"
        rm -rfv "./resources/${ARG5}/content/database/${CONTENT_DIR}/es/${ARG3}"
        rm -rfv "./resources/${ARG5}/content/database/${CONTENT_DIR}/pt-br/${ARG3}"
    fi
fi

#-----------------------------------------------------------------------------------------------------

#LOCK Command

if [[ $CMD == "lock" ]]; then
    echo "Lock CONTENT ${CONTENT_ORIGINAL} ?"
    read -n1 OP

    mv -v "./resources/${ARG5}/content/${ARG2}/en/${ARG3}.php" "./resources/${ARG5}/content/${ARG2}/en/${ARG3}.php.lock"
    mv -v "./resources/${ARG5}/content/${ARG2}/es/${ARG3}.php" "./resources/${ARG5}/content/${ARG2}/es/${ARG3}.php.lock"
    mv -v "./resources/${ARG5}/content/${ARG2}/pt-br/${ARG3}.php" "./resources/${ARG5}/content/${ARG2}/pt-br/${ARG3}.php.lock"

    if [[ $ARG4 =~ 'db:true' ]]; then
        mv -v "./resources/${ARG5}/content/database/${CONTENT_DIR}/en/${ARG3}" "./resources/${ARG5}/content/database/${CONTENT_DIR}/en/${ARG3}.lock"
        mv -v "./resources/${ARG5}/content/database/${CONTENT_DIR}/es/${ARG3}" "./resources/${ARG5}/content/database/${CONTENT_DIR}/es/${ARG3}.lock"
        mv -v "./resources/${ARG5}/content/database/${CONTENT_DIR}/pt-br/${ARG3}" "./resources/${ARG5}/content/database/${CONTENT_DIR}/pt-br/${ARG3}.lock"
    fi
fi


#-----------------------------------------------------------------------------------------------------

#UNLOCK Command

if [[ $CMD == "unlock" ]]; then
    echo "Unlock CONTENT ${CONTENT_ORIGINAL} ?"
    read -n1 OP

    mv -v "./resources/${ARG5}/content/${ARG2}/en/${ARG3}.php.lock" "./resources/${ARG5}/content/${ARG2}/en/${ARG3}.php"
    mv -v "./resources/${ARG5}/content/${ARG2}/es/${ARG3}.php.lock" "./resources/${ARG5}/content/${ARG2}/es/${ARG3}.php"
    mv -v "./resources/${ARG5}/content/${ARG2}/pt-br/${ARG3}.php.lock" "./resources/${ARG5}/content/${ARG2}/pt-br/${ARG3}.php"

    if [[ $ARG4 =~ 'db:true' ]]; then
        mv -v "./resources/${ARG5}/content/database/${CONTENT_DIR}/en/${ARG3}.lock" "./resources/${ARG5}/content/database/${CONTENT_DIR}/en/${ARG3}"
        mv -v "./resources/${ARG5}/content/database/${CONTENT_DIR}/es/${ARG3}.lock" "./resources/${ARG5}/content/database/${CONTENT_DIR}/es/${ARG3}"
        mv -v "./resources/${ARG5}/content/database/${CONTENT_DIR}/pt-br/${ARG3}.lock" "./resources/${ARG5}/content/database/${CONTENT_DIR}/pt-br/${ARG3}"
    fi
fi

#-----------------------------------------------------------------------------------------------------

#FINISH PROCESS

echo "CONTENT LIST:"
ls -l "./resources/${ARG5}/content/${ARG2}/en/"
ls -l "./resources/${ARG5}/content/${ARG2}/es/"
ls -l "./resources/${ARG5}/content/${ARG2}/pt-br/"

echo "DATABASE CONTENT LIST:"
ls -l "./resources/${ARG5}/content/database/"
ls -l "./resources/${ARG5}/content/database/"
ls -l "./resources/${ARG5}/content/database/"

echo ""
echo "Create CONTENT is finished"

exit
