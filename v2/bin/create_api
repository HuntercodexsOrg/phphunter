#!/bin/bash

################################################################################
# Author: Jereelton Teixeira
################################################################################

ARG1="$1"

if [[ ! $ARG1 =~ ':' ||  ! $ARG1 =~ '-' ]]; then
    echo "ERROR: Invalid argument to create API: ${ARG1} !"
    exit
fi

ENDPOINT_API=$(echo "$ARG1" | cut -d ":" -f1)
RESOURCE_API=$(echo "$ARG1" | cut -d ":" -f2)

if ! echo "${RESOURCE_API}" | egrep '(\w)+\-(\w)+' >> /dev/null 2>&1
then
    echo "ERROR: Invalid argument to RESOURCE API NAME: ${RESOURCE_API} !"
    exit
fi

CLASSNAME=$(echo "${RESOURCE_API}" | egrep '(\w)+\-(\w)+' | sed -r 's/\b(\w)(\w*)\b/\U\1\L\2/g' | sed -r 's/\-//g')
ATTRIBUTE=$(echo "${RESOURCE_API}" | egrep '(\w)+\-(\w)+' | sed -r 's/\b(\w)(\w*)\b/\U\1\L\2/g' | sed -r 's/(\w)(\w*)*/\L\1\L\2/' | sed -r 's/\-//g')

echo "Creating API: ./api/${ENDPOINT_API} with resource ${CLASSNAME}"

if [[ ! -e "./api/${ENDPOINT_API}" ]]; then
    mkdir -p "./api/${ENDPOINT_API}"
fi

if [[ ! -e "./api/${ENDPOINT_API}/index.php" ]]; then
    touch "./api/${ENDPOINT_API}/index.php"
    chmod 775 "./api/${ENDPOINT_API}/index.php"
else
    echo "The file ./api/${ENDPOINT_API}/index.php already exists, continue ?"
    read -n1 OP

    #Backup
    cp -pv "./api/${ENDPOINT_API}/index.php" "./api/${ENDPOINT_API}/index.php.bkp"
fi

if [[ ! -e "./api/${ENDPOINT_API}/${CLASSNAME}.php" ]]; then
    touch "./api/${ENDPOINT_API}/${CLASSNAME}.php"
    chmod 775 "./api/${ENDPOINT_API}/${CLASSNAME}.php"
else
    echo "The file ./api/${ENDPOINT_API}/${CLASSNAME}.php already exists, continue ?"
    read -n1 OP

    #Backup
    cp -pv "./api/${ENDPOINT_API}/${CLASSNAME}.php" "./api/${ENDPOINT_API}/${CLASSNAME}.php.bkp"
fi

TEMPLATE_INDEX="
<?php

session_start();

error_reporting(E_ALL);
ini_set('display_errors', FALSE);
ini_set('display_startup_errors', FALSE);

header('Access-Control-Allow-Origin: *');
header('Access-Control-Allow-Headers: Content-Type');

ini_set('memory_limit',-1);
ini_set('max_execution_time', 0);

include './api/${ENDPOINT_API}/${CLASSNAME}.php';

\$${ATTRIBUTE} = new ${CLASSNAME}(\$_POST['${ATTRIBUTE}']);

if(isset(\$_POST['${ATTRIBUTE}']) && \$_POST['${ATTRIBUTE}'] != '') {
    \$${ATTRIBUTE}->insert${CLASSNAME}();
}

if(isset(\$_GET['${ATTRIBUTE}']) && \$_GET['${ATTRIBUTE}'] != '') {
    \$${ATTRIBUTE}->get${CLASSNAME}();
}

if (!strcasecmp(\$_SERVER['REQUEST_METHOD'], 'PUT')) {
    \$${ATTRIBUTE}->update${CLASSNAME}();
}

if (!strcasecmp(\$_SERVER['REQUEST_METHOD'], 'DELETE')) {
    \$${ATTRIBUTE}->delete${CLASSNAME}();
}

echo \$${ATTRIBUTE}->apiResponse();

?>
"

TEMPLATE_CLASS="
<?php

/**
 * @description: API Generated by phpHunter
 * @example: ${CLASSNAME} Sample
 * @methods: POST|GET|PUT|DELETE
 */

class ${CLASSNAME}
{
    private \$${ATTRIBUTE};

    /**
     * @constructor: ${CLASSNAME}
    */
    public function __construct(\$${ATTRIBUTE})
    {
        \$this->${ATTRIBUTE} = \$${ATTRIBUTE};
    }

    /**
     * @methods: insert${CLASSNAME} [POST]
     */
    public function insert${CLASSNAME}()
    {
        //Create
    }

    /**
     * @methods: get${CLASSNAME} [GET]
     */
    public function get${CLASSNAME}()
    {
        //Read
    }

    /**
     * @methods: update${CLASSNAME} [PUT]
     */
    public function update${CLASSNAME}()
    {
        //Update
    }

    /**
     * @methods: delete${CLASSNAME} [DELETE]
     */
    public function delete${CLASSNAME}()
    {
        //Delete
    }

    /**
     * @methods: apiResponse [RESPONSE]
     */
    public function apiResponse()
    {
        return json_encode(
            [
                'status' => 200,
                'message' => 'Api response success: ' . \$this->${ATTRIBUTE},
                'method' => 'POST',
                'request' => apache_request_headers()
            ]
        );
    }
}

?>
"

echo "${TEMPLATE_INDEX}" > "./api/${ENDPOINT_API}/index.php"
echo "${TEMPLATE_CLASS}" > "./api/${ENDPOINT_API}/${CLASSNAME}.php"

echo "ENDPOINT_API LIST:"
ls -l "./api/${ENDPOINT_API}/"

echo ""
echo "Create API is finished"

exit
