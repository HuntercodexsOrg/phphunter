#!/bin/bash

################################################################################
# Author: Jereelton Teixeira
################################################################################

ARG1="$1" #Command[delete|lock|unlock]
ARG2="$2" #Path[site/target]
ARG3="$3" #ContentName[Content-Name-Test]
ARG4="$4" #Database[true:false]
ARG5="$5" #Item[itemName]
ARG6="$6" #MainDir[test|application...]

#-----------------------------------------------------------------------------------------------------

#CHECKIN PARAMETERS

if [[ ! $ARG1 =~ ':' ]]; then
    echo "ERROR: Invalid argument to handler ITEM: ${ARG1} !"
    exit
fi

if [[ ! $ARG2 =~ '/' ]]; then
    echo "ERROR: Invalid argument to handler ITEM: [${ARG2}] !"
    exit
fi

if [[ ! $ARG3 =~ '-' ]]; then
    echo "ERROR: Invalid argument to handler ITEM: [${ARG3}] !"
    exit
fi

if [[ $ARG4 == '' ]]; then
    echo "ERROR: Invalid argument to handler ITEM: [${ARG4}] !"
    exit
fi

if [[ $ARG5 == '' ]]; then
    echo "ERROR: Invalid argument to handler ITEM: [${ARG5}] !"
    exit
fi

MAIN_DIR="$ARG6"
if [[ $ARG6 == '.env' ]]; then
    if [[ ! -e $ARG6 ]]; then
        echo "ERROR: Env File ${MAIN_DIR} not Found !"
        exit
    fi
    ARG6=$(grep 'MAIN_DIR' "${ARG6}" | cut -d "=" -f2 | sed -r 's/"//g' | sed -r "s/'//g" | sed -r 's/ //g')
    MAIN_DIR="'.\$app->getMainDir().'"
fi

#-----------------------------------------------------------------------------------------------------

#VARIABLES PREPARE

#Content-Name-Test
CMD=$(echo "${ARG1}" | cut -d ":" -f1)
ITEM_DIR=$(echo "$ARG2" | cut -d "/" -f1)
ITEM_ORIGINAL="$ARG3"
ITEM_ID=$(echo "$ARG3" | tr '[:upper:]' '[:lower:]')
ITEM_CURRENT="$ARG5"

#-----------------------------------------------------------------------------------------------------

#CHECK IF ITEM EXISTS

#checkin delete
REGEXP_ITEM="(id='${ITEM_CURRENT}-${ITEM_ID}')"
MSG_CHECKIN="Not found Item"

#checkin unlock
if [[ $CMD == "unlock" ]]; then
    REGEXP_ITEM="^(<!--<div id='${ITEM_CURRENT}-${ITEM_ID}')"
    MSG_CHECKIN="Item is not Locked"
fi

#checkin lock
if [[ $CMD == "lock" ]]; then
    REGEXP_ITEM="^(<div id='${ITEM_CURRENT}-${ITEM_ID}')"
    MSG_CHECKIN="Item is already Locked or Not found"
fi

if ! grep -E "${REGEXP_ITEM}" "./resources/${ARG6}/content/${ARG2}/en/${ARG3}.php" >> /dev/null 2>&1
then
    echo "ERROR: ${MSG_CHECKIN} ${ITEM_CURRENT} in: ./resources/${ARG6}/content/${ARG2}/en/${ARG3}.php !"
    exit
fi

if ! grep -E "${REGEXP_ITEM}" "./resources/${ARG6}/content/${ARG2}/es/${ARG3}.php" >> /dev/null 2>&1
then
    echo "ERROR: ${MSG_CHECKIN} ${ITEM_CURRENT} in: ./resources/${ARG6}/content/${ARG2}/es/${ARG3}.php !"
    exit
fi

if ! grep -E "${REGEXP_ITEM}" "./resources/${ARG6}/content/${ARG2}/pt-br/${ARG3}.php" >> /dev/null 2>&1
then
    echo "ERROR: ${MSG_CHECKIN} ${ITEM_CURRENT} in: ./resources/${ARG6}/content/${ARG2}/pt-br/${ARG3}.php !"
    exit
fi

if [[ $ARG4 =~ 'db:true' ]]; then

    LOCK=""
    if [[ $CMD == "unlock" ]]; then
        LOCK=".lock"
    fi

    if [[ ! -e "./resources/${ARG6}/content/database/${ITEM_DIR}/en/${ITEM_ORIGINAL}/${ITEM_CURRENT}.html${LOCK}" ]]; then
        echo "ERROR: Not found ./resources/${ARG6}/content/database/${ITEM_DIR}/en/${ITEM_ORIGINAL}/${ITEM_CURRENT}.html${LOCK}"
        echo "Check if the item is locked !"
        exit
    fi

    if [[ ! -e "./resources/${ARG6}/content/database/${ITEM_DIR}/es/${ITEM_ORIGINAL}/${ITEM_CURRENT}.html${LOCK}" ]]; then
        echo "ERROR: Not found ./resources/${ARG6}/content/database/${ITEM_DIR}/es/${ITEM_ORIGINAL}/${ITEM_CURRENT}.html${LOCK}"
        echo "Check if the item is locked !"
        exit
    fi

    if [[ ! -e "./resources/${ARG6}/content/database/${ITEM_DIR}/pt-br/${ITEM_ORIGINAL}/${ITEM_CURRENT}.html${LOCK}" ]]; then
        echo "ERROR: Not found ./resources/${ARG6}/content/database/${ITEM_DIR}/pt-br/${ITEM_ORIGINAL}/${ITEM_CURRENT}.html${LOCK}"
        echo "Check if the item is locked !"
        exit
    fi
fi

#-----------------------------------------------------------------------------------------------------

#DELETE ITEM

if [[ $CMD == "delete" ]]; then
    echo "Delete ITEM ${ITEM_CURRENT} ?"
    read -n1 OP

    CONTROL=0
    CONTROL_EMPTY=0
    while IFS= read -r line || [[ -n "$line" ]]; do

        if [[ $CONTROL == 3 ]]; then
            CONTROL=0
            CONTROL_EMPTY=1
        fi

        if echo "$line" | grep "<div id='${ITEM_CURRENT}-${ITEM_ID}'" >> /dev/null 2>&1
        then
            CONTROL=$((CONTROL + 1))
            continue
        fi

        if [[ $CONTROL != 0 ]]; then
            CONTROL=$((CONTROL + 1))
            continue
        fi

        if [[ $CONTROL_EMPTY == 1 ]];then
            CONTROL_EMPTY=0
            continue
        fi

        echo "$line" >> "./resources/${ARG6}/content/${ARG2}/en/${ARG3}.php.tmp"

    done < "./resources/${ARG6}/content/${ARG2}/en/${ARG3}.php"

    mv -v "./resources/${ARG6}/content/${ARG2}/en/${ARG3}.php" "./resources/${ARG6}/content/${ARG2}/en/${ARG3}.php.bkp"
    mv -v "./resources/${ARG6}/content/${ARG2}/en/${ARG3}.php.tmp" "./resources/${ARG6}/content/${ARG2}/en/${ARG3}.php"

    CONTROL=0
    CONTROL_EMPTY=0
    while IFS= read -r line || [[ -n "$line" ]]; do

        if [[ $CONTROL == 3 ]]; then
            CONTROL=0
            CONTROL_EMPTY=1
        fi

        if echo "$line" | grep "<div id='${ITEM_CURRENT}-${ITEM_ID}'" >> /dev/null 2>&1
        then
            CONTROL=$((CONTROL + 1))
            continue
        fi

        if [[ $CONTROL != 0 ]]; then
            CONTROL=$((CONTROL + 1))
            continue
        fi

        if [[ $CONTROL_EMPTY == 1 ]];then
            CONTROL_EMPTY=0
            continue
        fi

        echo "$line" >> "./resources/${ARG6}/content/${ARG2}/es/${ARG3}.php.tmp"

    done < "./resources/${ARG6}/content/${ARG2}/es/${ARG3}.php"

    mv -v "./resources/${ARG6}/content/${ARG2}/es/${ARG3}.php" "./resources/${ARG6}/content/${ARG2}/es/${ARG3}.php.bkp"
    mv -v "./resources/${ARG6}/content/${ARG2}/es/${ARG3}.php.tmp" "./resources/${ARG6}/content/${ARG2}/es/${ARG3}.php"

    CONTROL=0
    CONTROL_EMPTY=0
    while IFS= read -r line || [[ -n "$line" ]]; do

        if [[ $CONTROL == 3 ]]; then
            CONTROL=0
            CONTROL_EMPTY=1
        fi

        if echo "$line" | grep "<div id='${ITEM_CURRENT}-${ITEM_ID}'" >> /dev/null 2>&1
        then
            CONTROL=$((CONTROL + 1))
            continue
        fi

        if [[ $CONTROL != 0 ]]; then
            CONTROL=$((CONTROL + 1))
            continue
        fi

        if [[ $CONTROL_EMPTY == 1 ]];then
            CONTROL_EMPTY=0
            continue
        fi

        echo "$line" >> "./resources/${ARG6}/content/${ARG2}/pt-br/${ARG3}.php.tmp"

    done < "./resources/${ARG6}/content/${ARG2}/pt-br/${ARG3}.php"

    mv -v "./resources/${ARG6}/content/${ARG2}/pt-br/${ARG3}.php" "./resources/${ARG6}/content/${ARG2}/pt-br/${ARG3}.php.bkp"
    mv -v "./resources/${ARG6}/content/${ARG2}/pt-br/${ARG3}.php.tmp" "./resources/${ARG6}/content/${ARG2}/pt-br/${ARG3}.php"

    if [[ $ARG4 =~ 'db:true' ]]; then
        cp -pv "./resources/${ARG6}/content/database/${ITEM_DIR}/en/${ITEM_ORIGINAL}/${ITEM_CURRENT}.html" "./resources/${ARG6}/content/database/${ITEM_DIR}/en/${ITEM_ORIGINAL}/${ITEM_CURRENT}.html.bkp"
        rm -rfv "./resources/${ARG6}/content/database/${ITEM_DIR}/en/${ITEM_ORIGINAL}/${ITEM_CURRENT}.html"

        cp -pv "./resources/${ARG6}/content/database/${ITEM_DIR}/es/${ITEM_ORIGINAL}/${ITEM_CURRENT}.html" "./resources/${ARG6}/content/database/${ITEM_DIR}/es/${ITEM_ORIGINAL}/${ITEM_CURRENT}.html.bkp"
        rm -rfv "./resources/${ARG6}/content/database/${ITEM_DIR}/es/${ITEM_ORIGINAL}/${ITEM_CURRENT}.html"

        cp -pv "./resources/${ARG6}/content/database/${ITEM_DIR}/pt-br/${ITEM_ORIGINAL}/${ITEM_CURRENT}.html" "./resources/${ARG6}/content/database/${ITEM_DIR}/pt-br/${ITEM_ORIGINAL}/${ITEM_CURRENT}.html.bkp"
        rm -rfv "./resources/${ARG6}/content/database/${ITEM_DIR}/pt-br/${ITEM_ORIGINAL}/${ITEM_CURRENT}.html"
    fi

fi
#-----------------------------------------------------------------------------------------------------

#LOCK ITEM

if [[ $CMD == "lock" ]]; then
    echo "Lock ITEM ${ITEM_CURRENT} ?"
    read -n1 OP

    CONTROL=0
    while IFS= read -r line || [[ -n "$line" ]]; do

        if [[ $CONTROL == 2 ]]; then
            CONTROL=0
            echo "${line}-->" >> "./resources/${ARG6}/content/${ARG2}/en/${ARG3}.php.tmp"
            continue
        fi

        if echo "$line" | grep "<div id='${ITEM_CURRENT}-${ITEM_ID}'" >> /dev/null 2>&1
        then
            CONTROL=$((CONTROL + 1))
            echo "<!--${line}" >> "./resources/${ARG6}/content/${ARG2}/en/${ARG3}.php.tmp"
            continue
        fi

        if [[ $CONTROL != 0 ]]; then
            CONTROL=$((CONTROL + 1))
            if echo "$line" | grep -E "<?php include.*${ITEM_CURRENT}.*?>" >> /dev/null 2>&1
            then
                echo "${line}" | sed -r 's/<\?php/<\?php \/*/g' | sed -r 's/\?>/\*\/\ \?>/g' >> "./resources/${ARG6}/content/${ARG2}/en/${ARG3}.php.tmp"
                continue
            fi
        fi

        echo "${line}" >> "./resources/${ARG6}/content/${ARG2}/en/${ARG3}.php.tmp"

    done < "./resources/${ARG6}/content/${ARG2}/en/${ARG3}.php"

    #mv -v "./resources/${ARG6}/content/${ARG2}/en/${ARG3}.php" "./resources/${ARG6}/content/${ARG2}/en/${ARG3}.php.bkp"
    mv -v "./resources/${ARG6}/content/${ARG2}/en/${ARG3}.php.tmp" "./resources/${ARG6}/content/${ARG2}/en/${ARG3}.php"

    CONTROL=0
    while IFS= read -r line || [[ -n "$line" ]]; do

        if [[ $CONTROL == 2 ]]; then
            CONTROL=0
            echo "${line}-->" >> "./resources/${ARG6}/content/${ARG2}/es/${ARG3}.php.tmp"
            continue
        fi

        if echo "$line" | grep "<div id='${ITEM_CURRENT}-${ITEM_ID}'" >> /dev/null 2>&1
        then
            CONTROL=$((CONTROL + 1))
            echo "<!--${line}" >> "./resources/${ARG6}/content/${ARG2}/es/${ARG3}.php.tmp"
            continue
        fi

        if [[ $CONTROL != 0 ]]; then
            CONTROL=$((CONTROL + 1))
            if echo "$line" | grep -E "<?php include.*${ITEM_CURRENT}.*?>" >> /dev/null 2>&1
            then
                echo "${line}" | sed -r 's/<\?php/<\?php \/*/g' | sed -r 's/\?>/\*\/\ \?>/g' >> "./resources/${ARG6}/content/${ARG2}/en/${ARG3}.php.tmp"
                continue
            fi
        fi

        echo "${line}" >> "./resources/${ARG6}/content/${ARG2}/es/${ARG3}.php.tmp"

    done < "./resources/${ARG6}/content/${ARG2}/es/${ARG3}.php"

    #mv -v "./resources/${ARG6}/content/${ARG2}/es/${ARG3}.php" "./resources/${ARG6}/content/${ARG2}/es/${ARG3}.php.bkp"
    mv -v "./resources/${ARG6}/content/${ARG2}/es/${ARG3}.php.tmp" "./resources/${ARG6}/content/${ARG2}/es/${ARG3}.php"

    CONTROL=0
    while IFS= read -r line || [[ -n "$line" ]]; do

        if [[ $CONTROL == 2 ]]; then
            CONTROL=0
            echo "${line}-->" >> "./resources/${ARG6}/content/${ARG2}/pt-br/${ARG3}.php.tmp"
            continue
        fi

        if echo "$line" | grep "<div id='${ITEM_CURRENT}-${ITEM_ID}'" >> /dev/null 2>&1
        then
            CONTROL=$((CONTROL + 1))
            echo "<!--${line}" >> "./resources/${ARG6}/content/${ARG2}/pt-br/${ARG3}.php.tmp"
            continue
        fi

        if [[ $CONTROL != 0 ]]; then
            CONTROL=$((CONTROL + 1))
            if echo "$line" | grep -E "<?php include.*${ITEM_CURRENT}.*?>" >> /dev/null 2>&1
            then
                echo "${line}" | sed -r 's/<\?php/<\?php \/*/g' | sed -r 's/\?>/\*\/\ \?>/g' >> "./resources/${ARG6}/content/${ARG2}/en/${ARG3}.php.tmp"
                continue
            fi
        fi

        echo "${line}" >> "./resources/${ARG6}/content/${ARG2}/pt-br/${ARG3}.php.tmp"

    done < "./resources/${ARG6}/content/${ARG2}/pt-br/${ARG3}.php"

    #mv -v "./resources/${ARG6}/content/${ARG2}/pt-br/${ARG3}.php" "./resources/${ARG6}/content/${ARG2}/pt-br/${ARG3}.php.bkp"
    mv -v "./resources/${ARG6}/content/${ARG2}/pt-br/${ARG3}.php.tmp" "./resources/${ARG6}/content/${ARG2}/pt-br/${ARG3}.php"

    if [[ $ARG4 =~ 'db:true' ]]; then
        mv -v "./resources/${ARG6}/content/database/${ITEM_DIR}/en/${ITEM_ORIGINAL}/${ITEM_CURRENT}.html" "./resources/${ARG6}/content/database/${ITEM_DIR}/en/${ITEM_ORIGINAL}/${ITEM_CURRENT}.html.lock"
        mv -v "./resources/${ARG6}/content/database/${ITEM_DIR}/es/${ITEM_ORIGINAL}/${ITEM_CURRENT}.html" "./resources/${ARG6}/content/database/${ITEM_DIR}/es/${ITEM_ORIGINAL}/${ITEM_CURRENT}.html.lock"
        mv -v "./resources/${ARG6}/content/database/${ITEM_DIR}/pt-br/${ITEM_ORIGINAL}/${ITEM_CURRENT}.html" "./resources/${ARG6}/content/database/${ITEM_DIR}/pt-br/${ITEM_ORIGINAL}/${ITEM_CURRENT}.html.lock"
    fi
fi
#-----------------------------------------------------------------------------------------------------

#UNLOCK ITEM

if [[ $CMD == "unlock" ]]; then
    echo "Unlock ITEM ${ITEM_CURRENT} ?"
    read -n1 OP

    CONTROL=0
    while IFS= read -r line || [[ -n "$line" ]]; do

        if [[ $CONTROL == 2 ]]; then
            CONTROL=0
            echo "${line}" | sed -r 's/-->//g' >> "./resources/${ARG6}/content/${ARG2}/en/${ARG3}.php.tmp"
            continue
        fi

        if echo "$line" | grep "<!--<div id='${ITEM_CURRENT}-${ITEM_ID}'" >> /dev/null 2>&1
        then
            CONTROL=$((CONTROL + 1))
            echo "${line}" | sed -r 's/<!--//g' >> "./resources/${ARG6}/content/${ARG2}/en/${ARG3}.php.tmp"
            continue
        fi

        if [[ $CONTROL != 0 ]]; then
            CONTROL=$((CONTROL + 1))
            if echo "$line" | grep -E "<\?php \/\* include.*\/${ITEM_CURRENT}\.html.* \*\/ \?>" >> /dev/null 2>&1
            then
                echo "${line}" | sed -r 's/<\?php \/\* /<\?php /g' | sed -r 's/\*\/ \?>/\?>/g' >> "./resources/${ARG6}/content/${ARG2}/en/${ARG3}.php.tmp"
            fi
            continue
        fi

        echo "${line}" >> "./resources/${ARG6}/content/${ARG2}/en/${ARG3}.php.tmp"

    done < "./resources/${ARG6}/content/${ARG2}/en/${ARG3}.php"

    #mv -v "./resources/${ARG6}/content/${ARG2}/en/${ARG3}.php" "./resources/${ARG6}/content/${ARG2}/en/${ARG3}.php.bkp"
    mv -v "./resources/${ARG6}/content/${ARG2}/en/${ARG3}.php.tmp" "./resources/${ARG6}/content/${ARG2}/en/${ARG3}.php"

    CONTROL=0
    while IFS= read -r line || [[ -n "$line" ]]; do

        if [[ $CONTROL == 2 ]]; then
            CONTROL=0
            echo "${line}" | sed -r 's/-->//g' >> "./resources/${ARG6}/content/${ARG2}/es/${ARG3}.php.tmp"
            continue
        fi

        if echo "$line" | grep "<div id='${ITEM_CURRENT}-${ITEM_ID}'" >> /dev/null 2>&1
        then
            CONTROL=$((CONTROL + 1))
            echo "${line}" | sed -r 's/<!--//g' >> "./resources/${ARG6}/content/${ARG2}/es/${ARG3}.php.tmp"
            continue
        fi

        if [[ $CONTROL != 0 ]]; then
            CONTROL=$((CONTROL + 1))
            if echo "$line" | grep -E "<\?php \/\* include.*\/${ITEM_CURRENT}\.html.* \*\/ \?>" >> /dev/null 2>&1
            then
                echo "${line}" | sed -r 's/<\?php \/\* /<\?php /g' | sed -r 's/\*\/ \?>/\?>/g' >> "./resources/${ARG6}/content/${ARG2}/es/${ARG3}.php.tmp"
                continue
            fi
        fi

        echo "${line}" >> "./resources/${ARG6}/content/${ARG2}/es/${ARG3}.php.tmp"

    done < "./resources/${ARG6}/content/${ARG2}/es/${ARG3}.php"

    #mv -v "./resources/${ARG6}/content/${ARG2}/es/${ARG3}.php" "./resources/${ARG6}/content/${ARG2}/es/${ARG3}.php.bkp"
    mv -v "./resources/${ARG6}/content/${ARG2}/es/${ARG3}.php.tmp" "./resources/${ARG6}/content/${ARG2}/es/${ARG3}.php"

    CONTROL=0
    while IFS= read -r line || [[ -n "$line" ]]; do

        if [[ $CONTROL == 2 ]]; then
            CONTROL=0
            echo "${line}" | sed -r 's/-->//g' >> "./resources/${ARG6}/content/${ARG2}/pt-br/${ARG3}.php.tmp"
            continue
        fi

        if echo "$line" | grep "<div id='${ITEM_CURRENT}-${ITEM_ID}'" >> /dev/null 2>&1
        then
            CONTROL=$((CONTROL + 1))
            echo "${line}" | sed -r 's/<!--//g' >> "./resources/${ARG6}/content/${ARG2}/pt-br/${ARG3}.php.tmp"
            continue
        fi

        if [[ $CONTROL != 0 ]]; then
            CONTROL=$((CONTROL + 1))
            if echo "$line" | grep -E "<\?php \/\* include.*\/${ITEM_CURRENT}\.html.* \*\/ \?>" >> /dev/null 2>&1
            then
                echo "${line}" | sed -r 's/<\?php \/\* /<\?php /g' | sed -r 's/\*\/ \?>/\?>/g' >> "./resources/${ARG6}/content/${ARG2}/pt-br/${ARG3}.php.tmp"
                continue
            fi
        fi

        echo "${line}" >> "./resources/${ARG6}/content/${ARG2}/pt-br/${ARG3}.php.tmp"

    done < "./resources/${ARG6}/content/${ARG2}/pt-br/${ARG3}.php"

    #mv -v "./resources/${ARG6}/content/${ARG2}/pt-br/${ARG3}.php" "./resources/${ARG6}/content/${ARG2}/pt-br/${ARG3}.php.bkp"
    mv -v "./resources/${ARG6}/content/${ARG2}/pt-br/${ARG3}.php.tmp" "./resources/${ARG6}/content/${ARG2}/pt-br/${ARG3}.php"

    if [[ $ARG4 =~ 'db:true' ]]; then
        mv -v "./resources/${ARG6}/content/database/${ITEM_DIR}/en/${ITEM_ORIGINAL}/${ITEM_CURRENT}.html.lock" "./resources/${ARG6}/content/database/${ITEM_DIR}/en/${ITEM_ORIGINAL}/${ITEM_CURRENT}.html"
        mv -v "./resources/${ARG6}/content/database/${ITEM_DIR}/es/${ITEM_ORIGINAL}/${ITEM_CURRENT}.html.lock" "./resources/${ARG6}/content/database/${ITEM_DIR}/es/${ITEM_ORIGINAL}/${ITEM_CURRENT}.html"
        mv -v "./resources/${ARG6}/content/database/${ITEM_DIR}/pt-br/${ITEM_ORIGINAL}/${ITEM_CURRENT}.html.lock" "./resources/${ARG6}/content/database/${ITEM_DIR}/pt-br/${ITEM_ORIGINAL}/${ITEM_CURRENT}.html"
    fi

fi
#-----------------------------------------------------------------------------------------------------

echo "CONTENT LIST:"
ls -l "./resources/${ARG6}/content/${ARG2}/en/${ARG3}.php"
ls -l "./resources/${ARG6}/content/${ARG2}/es/${ARG3}.php"
ls -l "./resources/${ARG6}/content/${ARG2}/pt-br/${ARG3}.php"

echo "ITEM LIST:"
ls -l "./resources/${ARG6}/content/database/${ITEM_DIR}/en/${ITEM_ORIGINAL}/${ITEM_CURRENT}"*
ls -l "./resources/${ARG6}/content/database/${ITEM_DIR}/es/${ITEM_ORIGINAL}/${ITEM_CURRENT}"*
ls -l "./resources/${ARG6}/content/database/${ITEM_DIR}/pt-br/${ITEM_ORIGINAL}/${ITEM_CURRENT}"*

echo ""
echo "Handler ITEM is finished"

exit
