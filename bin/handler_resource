#!/bin/bash

################################################################################
# Author: Jereelton Teixeira
################################################################################

ARG1="$1"
ARG2="$2"
ARG3="$3"
ARG4="$4" #Main Dir

if [[ ! $ARG1 =~ ':' ]]; then
    echo "ERROR: Invalid argument to handler RESOURCE: ${ARG1} !"
    exit
fi

if [[ $ARG2 == '' ]]; then
    echo "ERROR: Invalid argument to handler RESOURCE: [${ARG2}] !"
    exit
fi

if [[ ! $ARG3 =~ '/' ]]; then
    echo "ERROR: Invalid argument to handler RESOURCE: [${ARG3}] !"
    exit
fi

if [[ $ARG4 == '' ]]; then
    echo "ERROR: Invalid argument to handler RESOURCE: [${ARG4}] !"
    exit
fi

if [[ $ARG4 == '.env' ]]; then
    if [[ ! -e $ARG4 ]]; then
        echo "ERROR: Env File ${MAIN_DIR} not Found !"
        eit
    fi
    ARG4=$(grep 'MAIN_DIR' "${ARG4}" | cut -d "=" -f2 | sed -r 's/"//g' | sed -r "s/'//g" | sed -r 's/ //g')
fi

RESOURCE="./resources/${ARG4}/${ARG2}/${ARG3}"

if [[ ! -e $RESOURCE && ! -e "${RESOURCE}.lock" ]]; then
    echo "ERROR: Not Found RESOURCE ${RESOURCE} !"
    exit
fi

CMD=$(echo "${ARG1}" | cut -d ":" -f1)

if [[ $CMD == "delete" ]]; then
    echo "Delete RESOURCE ${RESOURCE} ?"
    read -n1 OP

    rm -rfv "${RESOURCE}"
fi

if [[ $CMD == "lock" ]]; then
    echo "Lock RESOURCE {$RESOURCE} ?"
    read -n1 OP

    if [[ -e "${RESOURCE}.lock" ]];
    then
        echo "ERROR: The RESOURCE already is locked !"
    else
        mv -v "${RESOURCE}" "${RESOURCE}.lock"
    fi
fi

if [[ $CMD == "unlock" ]]; then
    echo "Unlock RESOURCE ${RESOURCE} ?"
    read -n1 OP

    if [[ -e "${RESOURCE}.lock" ]];
    then
        mv -v "${RESOURCE}.lock" "${RESOURCE}"
    else
        echo "ERROR: The RESOURCE is not locked !"
    fi
fi

if [[ -e $RESOURCE ]]; then
    echo "RESOURCE LIST:"
    ls -l "${RESOURCE}"
fi

echo ""
echo "Create RESOURCE is finished"

exit
